{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceIdentifier": {
      "type": "string",
      "minLength": 4,
      "maxLength": 4
    },
    "environment": {
      "type": "string",
      "defaultValue": "d",
      "allowedValues": [
        "d",
        "t",
        "p"
      ]
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "DEV",
      "allowedValues": [
        "DEV",
        "TEST",
        "OAT",
        "PROD"
      ]
    },
    "environmentInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "coreResourceGroupEnvironmentInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "vNetInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "subnetInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "eapimPublicIpAddress": {
      "type": "string"
    },
    "appName": {
      "type": "string",
      "maxLength": 8
    }
  },
  "variables": {

    "namePrefix": "[concat(parameters('serviceIdentifier'), parameters('environment'), parameters('environmentInstance'))]",
    "appNamePrefix": "[concat(variables('namePrefix'), '-', parameters('appName'))]",

    "servicePlanName": "[concat(variables('appNamePrefix'), '-asp-01')]",
    "servicePlanId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]",

    "appInsightsName": "[concat(variables('appNamePrefix'), '-ai-01')]",
    "appInsightsId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",

    "storageAccountName": "[concat(variables('namePrefix'), parameters('appName'), 'sa01')]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "storageAccountConnStr": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=')]",

    "corePrefix": "[concat(parameters('serviceIdentifier'), parameters('environment'), parameters('coreResourceGroupEnvironmentInstance'), '-core')]",
    "vNetName": "[concat(concat(variables('corePrefix'), '-vn-'), parameters('vNetInstance'))]",
    "subnetName": "[concat(variables('corePrefix'), '-sn-', parameters('subnetInstance'))]",
    "subnetId": "[resourceId(variables('corePrefix'), 'Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('subnetName'))]",

    "functionAppName": "[concat(variables('appNamePrefix'), '-fa-01')]",
    "functionAppId": "[resourceId('Microsoft.Web/sites/', variables('functionAppName'))]"

  },
  "resources": [

    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('servicePlanName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      },
      "sku": {
        "name": "P1V2",
        "tier": "PremiumV2"
      },
      "kind": "functionapp",
      "properties": {
        "name": "[variables('servicePlanName')]"
      }
    },

    {
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "kind": "other",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      },
      "properties": {
        "Application_Type": "other"
      }
    },

    {
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },

    {
      "apiVersion": "2018-11-01",
      "name": "[variables('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('servicePlanId')]",
        "[variables('appInsightsId')]",
        "[variables('storageAccountId')]"
      ],
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      },
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[variables('servicePlanId')]",
        "siteConfig": {
          "appSettings": [

            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('appInsightsId'), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat(variables('storageAccountConnStr'), listKeys(variables('storageAccountId'), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat(variables('storageAccountConnStr'), listKeys(variables('storageAccountId'), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat(variables('storageAccountConnStr'), listKeys(variables('storageAccountId'), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            },

            {
              "name": "FileStorageConnectionString",
              "value": "[concat(variables('storageAccountConnStr'), listKeys(variables('storageAccountId'), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FileStorageContainerName",
              "value": "files"
            }

          ],

          "ipSecurityRestrictions": [
            {
              "ipAddress": "[concat(parameters('eapimPublicIpAddress'), '/32')]",
              "action": "Allow",
              "name": "Allow EAPIM",
              "priority": 1
            }
          ]

        }
      },
      "identity": {
        "type": "SystemAssigned"
      } //,
      // "resources": [
      //   {
      //     "apiVersion": "2016-08-01",
      //     "type": "Microsoft.Web/sites/networkConfig",
      //     "name": "[concat(variables('functionAppName'), '/VirtualNetwork')]",
      //     "location": "[resourceGroup().location]",
      //     "dependsOn": [
      //       "[concat('Microsoft.Web/sites/', variables('functionAppName'))]"
      //     ],
      //     "properties": {
      //       "subnetResourceId": "[variables('subnetId')]"
      //     }
      //   }
      // ]
      // NOTE: The above needs commenting out, once CIP have provisioned the
      //       required VNet/subnets.
    }
  ],
  "outputs": {
    "functionAppKey": {
      "value": "[listkeys(concat(variables('functionAppId'), '/host/default/'), '2016-08-01').functionKeys.default]",
      "type": "string"
    },
    "functionAppPrincipalId": {
      "value": "[reference(variables('functionAppId'), '2017-08-01', 'Full').identity.principalId]",
      "type": "string"
    }
  }
}